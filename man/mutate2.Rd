% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mutate2.R
\name{mutate2}
\alias{mutate2}
\title{Add new variables, keeping attributes}
\usage{
mutate2(.data, ...)
}
\arguments{
\item{.data}{a data frame.}

\item{...}{Name-value pairs of expressions. Use NULL to drop a variable. See
the help of \code{dplyr::mutate()} for more information}
}
\value{
An object of the same class as \code{.data}, with the same attributes.
}
\description{
Same as \code{mutate()}, \code{mutate2()} adds new variables, but preserving
the user-defined attributes (i.e. those that do not belong to the data frame
class) in doing so.
}
\examples{

library(dplyr)

# Let's start by adding an attribute to a data frame:
attr(mtcars, "my_attribute_name") <- "my_attribute_value"

# We can see the attributes of this data frame:
attributes(mtcars)

# We can now see that mutate drops the non-class attributes:
mtcars \%>\% mutate(a_new_variable = 3) \%>\% attributes()

# Whereas mutate2 does not:
mtcars \%>\% mutate2(a_new_variable = 3) \%>\% attributes()

}
\seealso{
\code{\link[dplyr]{mutate}}.
}
