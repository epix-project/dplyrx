% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/aggregate_by.R
\name{aggregate_by}
\alias{aggregate_by}
\title{Aggregating observations on some variables}
\usage{
aggregate_by(df, col_name, ..., expr = NULL, fun = sum, new_name = NULL)
}
\arguments{
\item{df}{the data frame on which to perform the aggregation.}

\item{col_name}{categorical variable used for aggregation.}

\item{...}{the variables on which to perform the aggregation, using the
funtion \code{fun}.}

\item{expr}{an expression apply on col_name, to filter the values used for
aggregation. In the expression, use a \code{.} to signify the position of
\code{col_name} instead of naming it (see \code{examples}). If NULL, all the
value are used for aggregation.}

\item{fun}{the function used to perform the aggregation. By default \code{sum}.}

\item{new_name}{the new value of the categorical variable, after aggregation.
By default, it concatenates the values of the categorical variables used in
\code{what}, separating them by " & ".}
}
\value{
A data frame with the same variables as `df` but for which some of
the observation have been aggregated (i.e. less rows than in `df`).
}
\description{
\code{aggregate_by} aggregates some variables of a data frame according to
the values of a categorical variable of the same data frame and using a given
function for the aggregation.
}
\details{
The function splits the data frame \code{df} in two data frames, based on the
\code{what} argument. On the data frame that contains the values of the
categorical variable to aggregate (df1), the function performs a
\code{\link[dplyr]{group_by}} followed by a \code{\link[dplyr]{summarise_all}}
with the function \code{fun} and then binds it by row with the other data
frame (df2).
}
\examples{
## A toy data frame:
set.seed(30101976)
data <- expand.grid(letters[1:3], 1:3, 4:6)
data$Var4 <- sample(1:100, nrow(data), TRUE)
data$Var5 <- sample(1:100, nrow(data), TRUE)
data$Var6 <- sample(1:100, nrow(data), TRUE)

## Aggregating the values "a" and "b" of the categorical variable Var1,
## summing the values of variables Var4, Var5, Var6 (i.e. all the variables
## that are not in the arguments of the function call):
aggregate_by(data, Var1, Var2, Var3, expr = . \%in\% c("a", "b"))

## other way of writing it:
sel <- c("Var2", "Var3")
aggregate_by(data, Var1, Var2, Var3, expr = ". \%in\% c('a', 'b')")
aggregate_by(data, "Var1", sel, expr = "grepl('a|b', .)")
aggregate_by(data, Var1, "Var2", "Var3", expr = ". \%in\% c('a', 'b')")
aggregate_by(data, "Var1", sel, expr = grepl("a|b", .))

}
\author{
Marc Choisy and Lucie Contamin.
}
